{{- if and .Values.scheduler .Values.scheduler.enabled }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: scheduler
  labels:
    {{- include "hasher-matcher-actioner.labels" . | nindent 4 }}
spec:
  replicas: 1
  updateStrategy:
    type: RollingUpdate
  revisionHistoryLimit: {{ .Values.scheduler.revisionHistoryLimit | default 1 }}
  selector:
    matchLabels:
      {{- include "hasher-matcher-actioner.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: scheduler
  template:
    metadata:
      labels:
        {{- include "hasher-matcher-actioner.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: scheduler
        {{- with (merge .Values.podLabels (default (dict) .Values.scheduler.labels)) }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      annotations:
        {{- with .Values.scheduler.config }}
        checksum/config: {{ (tpl . $) | sha256sum }}
        {{- end }}
        {{- with (merge .Values.podAnnotations (default (dict) .Values.scheduler.annotations)) }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ include "hasher-matcher-actioner.serviceAccountName" . }}
      {{- with .Values.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: scheduler
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- with .Values.imagePullSecrets }}
          imagePullSecrets:
            {{- toYaml . | nindent 12  }}
          {{- end }}
          command:
            - "gunicorn"
            - "--bind"
            - "0.0.0.0:5000"
            - "OpenMediaMatch.app:create_app()"
          env:
            - name: MIGRATION_COMMAND
              value: "0"
            - name: PRODUCTION
              value: "True"
            - name: OMM_CONFIG
              value: /config/omm_config.py
            {{- include "hasher-matcher-actioner.databaseEnv" . | nindent 12 }}
            {{- with .Values.scheduler.env }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          {{- if .Values.scheduler.config }}
          volumeMounts:
            - name: config
              mountPath: /config
              readOnly: true
          {{- end }}
          ports:
            - name: http
              containerPort: 5000
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: http
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /status
              port: http
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
          {{- with .Values.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.scheduler.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      {{- if .Values.scheduler.config }}
      volumes:
        - name: config
          configMap:
            name: scheduler
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}