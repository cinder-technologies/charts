apiVersion: batch/v1
kind: Job
metadata:
  name: migration
  labels:
    {{- include "hasher-matcher-actioner.labels" . | nindent 4 }}
    app.kubernetes.io/component: migration
  annotations:
    {{- if .Values.migration.hook.enabled }}
    helm.sh/hook: pre-install,pre-upgrade
    helm.sh/hook-weight: "-1"
    helm.sh/hook-delete-policy: before-hook-creation
    {{- end }}
spec:
  backoffLimit: {{ .Values.migration.backoffLimit | default 3 }}
  {{- if hasKey .Values.migration "ttlSecondsAfterFinished" }}
  ttlSecondsAfterFinished: {{ .Values.migration.ttlSecondsAfterFinished }}
  {{- end }}
  template:
    metadata:
      labels:
        {{- include "hasher-matcher-actioner.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: migration
      {{- with .Values.migration.podAnnotations | default .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      {{- with .Values.migration.imagePullSecrets | default .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "hasher-matcher-actioner.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.migration.podSecurityContext | default .Values.podSecurityContext | nindent 8 }}
      restartPolicy: OnFailure
      containers:
        - name: migration
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - "bash"
            - "-c"
            - "flask --app OpenMediaMatch.app db upgrade --directory OpenMediaMatch/migrations"
          env:
            - name: MIGRATION_COMMAND
              value: "1"
            - name: PRODUCTION
              value: "True"
            - name: OMM_CONFIG
              value: "/config/omm_config.py"
            {{- include "hasher-matcher-actioner.databaseEnv" . | nindent 12 }}
            {{- with .Values.migration.extraEnv | default .Values.extraEnv }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          volumeMounts:
            - name: config
              mountPath: /config
              readOnly: true
          {{- with .Values.migration.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.securityContext -}}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      volumes:
        - name: config
          configMap:
            name: migration
      {{- with .Values.migration.nodeSelector | default .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.migration.affinity | default .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.migration.tolerations | default .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
